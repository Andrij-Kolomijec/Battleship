(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>p});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),s=t(667),c=t.n(s),l=new URL(t(132),t.b),d=a()(o()),A=c()(l);d.push([e.id,`* {\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  --border-color: antiquewhite;\n  --ship-color: rgb(76, 183, 226);\n}\n\nbody {\n  height: 99vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background: url(${A});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n}\n\nheader {\n  font-size: 70px;\n  margin-top: 50px;\n  color: antiquewhite;\n  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.9);\n}\n\n#content {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n#button-container {\n  display: flex;\n  align-self: center;\n  flex-direction: column;\n  gap: 30px;\n}\n\nbutton {\n  font-size: 30px;\n  background-color: transparent;\n  border-radius: 15px;\n  color: antiquewhite;\n  padding: 0 10px;\n  width: 310px;\n}\n\nbutton:hover {\n  font-weight: bold;\n}\n\n#headings {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n  color: antiquewhite;\n  font-size: 30px;\n  position: relative;\n}\n\n#tooltip {\n  color: antiquewhite;\n  font-size: 1rem;\n  position: absolute;\n  top: 2.5rem;\n}\n\n#board-container {\n  display: grid;\n  grid-template: auto / auto auto auto auto ;\n  gap: 10px;\n  box-sizing: border-box;\n}\n\n.fleet {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.fleet.player {\n  align-items: flex-end;\n}\n\n.vessel {\n  display: flex;\n}\n\n.vessel > div {\n  border: 1px solid var(--border-color);\n  border-top: 2px solid var(--border-color);\n  border-bottom: 2px solid var(--border-color);\n  background-color: var(--ship-color);\n  height: 20px;\n  width: 20px;\n}\n\n.vessel > div:first-child {\n  border-left: 2px solid var(--border-color);\n}\n\n.vessel > div:last-child {\n  border-right: 2px solid var(--border-color);\n}\n\n#gameboard-enemy,\n#gameboard-player {\n  display: grid;\n  grid-template: repeat(10, 45px) / repeat(10, 45px);\n  border: 1px solid var(--border-color);\n  box-shadow: 0 0 5px 2px rgba(0, 0, 0, 0.7);\n  backdrop-filter: blur(50px);\n}\n\n.cell,\n.cell-enemy {\n  border: 1px solid var(--border-color);\n}\n\n.ship {\n  background-color: var(--ship-color);\n}\n\n.hit {\n  background-color: rgb(165, 165, 165);\n}\n\n.hit.ship,\n.hit.ship-enemy {\n  background-color: rgb(145, 36, 36);\n}\n\nfooter {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  align-self: stretch;\n  margin: 15px 50px;\n  color: #faebd7;\n}\n\n.icon {\n  height: 35px;\n  filter: invert(85%) sepia(2%) saturate(1581%) hue-rotate(342deg) brightness(107%) contrast(102%);\n  transition: transform 1.4s ease-in-out;\n}\n\n.icon:hover {\n  transform: rotate(720deg) scale(1.5);\n}\n\na {\n  color: antiquewhite;\n}\n\n.invalid-drop {\n  /* border: 4px solid red; */\n  background-color: rgb(160, 97, 97);\n}\n\n.valid-drop {\n  background-color: rgb(101, 170, 101);\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,4BAA4B;EAC5B,+BAA+B;AACjC;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,mDAAmC;EACnC,sBAAsB;EACtB,4BAA4B;EAC5B,4BAA4B;EAC5B,2BAA2B;EAC3B,sHAAsH;AACxH;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,mBAAmB;EACnB,2CAA2C;AAC7C;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,eAAe;EACf,6BAA6B;EAC7B,mBAAmB;EACnB,mBAAmB;EACnB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,YAAY;EACZ,mBAAmB;EACnB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,aAAa;EACb,0CAA0C;EAC1C,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,qCAAqC;EACrC,yCAAyC;EACzC,4CAA4C;EAC5C,mCAAmC;EACnC,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,0CAA0C;AAC5C;;AAEA;EACE,2CAA2C;AAC7C;;AAEA;;EAEE,aAAa;EACb,kDAAkD;EAClD,qCAAqC;EACrC,0CAA0C;EAC1C,2BAA2B;AAC7B;;AAEA;;EAEE,qCAAqC;AACvC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;;EAEE,kCAAkC;AACpC;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,mBAAmB;EACnB,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,gGAAgG;EAChG,sCAAsC;AACxC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;EAC3B,kCAAkC;AACpC;;AAEA;EACE,oCAAoC;AACtC",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  --border-color: antiquewhite;\n  --ship-color: rgb(76, 183, 226);\n}\n\nbody {\n  height: 99vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background: url('./battleship.jpg');\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n}\n\nheader {\n  font-size: 70px;\n  margin-top: 50px;\n  color: antiquewhite;\n  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.9);\n}\n\n#content {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n#button-container {\n  display: flex;\n  align-self: center;\n  flex-direction: column;\n  gap: 30px;\n}\n\nbutton {\n  font-size: 30px;\n  background-color: transparent;\n  border-radius: 15px;\n  color: antiquewhite;\n  padding: 0 10px;\n  width: 310px;\n}\n\nbutton:hover {\n  font-weight: bold;\n}\n\n#headings {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n  color: antiquewhite;\n  font-size: 30px;\n  position: relative;\n}\n\n#tooltip {\n  color: antiquewhite;\n  font-size: 1rem;\n  position: absolute;\n  top: 2.5rem;\n}\n\n#board-container {\n  display: grid;\n  grid-template: auto / auto auto auto auto ;\n  gap: 10px;\n  box-sizing: border-box;\n}\n\n.fleet {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.fleet.player {\n  align-items: flex-end;\n}\n\n.vessel {\n  display: flex;\n}\n\n.vessel > div {\n  border: 1px solid var(--border-color);\n  border-top: 2px solid var(--border-color);\n  border-bottom: 2px solid var(--border-color);\n  background-color: var(--ship-color);\n  height: 20px;\n  width: 20px;\n}\n\n.vessel > div:first-child {\n  border-left: 2px solid var(--border-color);\n}\n\n.vessel > div:last-child {\n  border-right: 2px solid var(--border-color);\n}\n\n#gameboard-enemy,\n#gameboard-player {\n  display: grid;\n  grid-template: repeat(10, 45px) / repeat(10, 45px);\n  border: 1px solid var(--border-color);\n  box-shadow: 0 0 5px 2px rgba(0, 0, 0, 0.7);\n  backdrop-filter: blur(50px);\n}\n\n.cell,\n.cell-enemy {\n  border: 1px solid var(--border-color);\n}\n\n.ship {\n  background-color: var(--ship-color);\n}\n\n.hit {\n  background-color: rgb(165, 165, 165);\n}\n\n.hit.ship,\n.hit.ship-enemy {\n  background-color: rgb(145, 36, 36);\n}\n\nfooter {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  align-self: stretch;\n  margin: 15px 50px;\n  color: #faebd7;\n}\n\n.icon {\n  height: 35px;\n  filter: invert(85%) sepia(2%) saturate(1581%) hue-rotate(342deg) brightness(107%) contrast(102%);\n  transition: transform 1.4s ease-in-out;\n}\n\n.icon:hover {\n  transform: rotate(720deg) scale(1.5);\n}\n\na {\n  color: antiquewhite;\n}\n\n.invalid-drop {\n  /* border: 4px solid red; */\n  background-color: rgb(160, 97, 97);\n}\n\n.valid-drop {\n  background-color: rgb(101, 170, 101);\n}"],sourceRoot:""}]);const p=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],s=0;s<e.length;s++){var c=e[s],l=r.base?c[0]+r.base:c[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var h=o(u,r);r.byIndex=s,n.splice(s,0,{identifier:A,updater:h,references:1})}a.push(A)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=t(i[a]);n[s].references--}for(var c=r(e,o),l=0;l<i.length;l++){var d=t(i[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},132:(e,n,t)=>{e.exports=t.p+"5d901c6f515ba7ea18cc.jpg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),s=t(565),c=t.n(s),l=t(216),d=t.n(l),A=t(589),p=t.n(A),u=t(426),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),n()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals,t(132),t.p,t.p;class f{constructor(e,n){this.length=e,this.name=n,this.hits=Array(e).fill(!1),this.coordinates=[],this.orientation=null}hit(){const e=this.hits.indexOf(!1);-1!==e&&(this.hits[e]=!0)}isSunk(){return this.hits.every((e=>e))}}class m{constructor(e,n){this.rows=e,this.cols=n,this.grid=this.createEmptyGrid(),this.attackedCells=[],this.sunkenShips=0}createEmptyGrid(){return Array.from({length:this.rows},(()=>Array(this.cols).fill(null)))}isValidPlacement(e,n,t,r){for(let o=0;o<e.length;o++)if("horizontal"===r){if(this.grid[n]&&null!==this.grid[n][t+o])return!1}else if(!this.grid[n+o]||null!==this.grid[n+o][t])return!1;return!0}placeShip(e,n,t,r){if(this.isValidPlacement(e,n,t,r)){e.coordinates=[];for(let o=0;o<e.length;o++)"horizontal"===r?(this.grid[n][t+o]=e,e.coordinates.push(`${n}-${t+o}`)):(this.grid[n+o][t]=e,e.coordinates.push(`${n+o}-${t}`));e.orientation=r}else console.log("Invalid ship placement!")}removeShip(e){for(const n of e.coordinates)this.grid[n[0]][n[2]]=null}receiveAttack(e,n){const t=`${e}-${n}`;if(this.attackedCells.includes(t))return console.log("Already attacked this cell!"),!1;if(this.grid[e]&&null!==this.grid[e][n]){const r=this.grid[e][n];return r.hit(),this.attackedCells.push(t),r.isSunk()&&(this.sunkenShips+=1),!0}return this.attackedCells.push(t),!1}checkVictory(){return this.sunkenShips>=7}display(){console.log(`   ${Array.from({length:this.cols},((e,n)=>n)).join(" ")}`);for(let e=0;e<this.rows;e++){const n=e<10?` ${e}`:e;console.log(`${n} ${this.grid[e].map((e=>e?"X":"-")).join(" ")}`)}}}const g=document.querySelector("#gameboard-enemy"),E=document.querySelector("#gameboard-player"),v=document.querySelector("#place-fleet"),C=document.querySelector("#start"),b=document.querySelector("#text");let y=new m(10,10),x=new m(10,10),B={},w={};function k(){B={submarine1:new f(1,"submarine1"),submarine2:new f(1,"submarine2"),destroyer1:new f(2,"destroyer1"),destroyer2:new f(2,"destroyer2"),cruiser:new f(3,"cruiser"),battleship:new f(4,"battleship"),carrier:new f(5,"carrier")},w={submarine1Enemy:new f(1),submarine2Enemy:new f(1),destroyer1Enemy:new f(2),destroyer2Enemy:new f(2),cruiserEnemy:new f(3),battleshipEnemy:new f(4),carrierEnemy:new f(5)}}k(),function(){for(let e=0;e<10;e++)for(let n=0;n<10;n++){const t=document.createElement("div");t.classList.add("cell"),t.setAttribute("id",`${e}-${n}`),E.appendChild(t)}}(),function(){for(let e=0;e<10;e++)for(let n=0;n<10;n++){const t=document.createElement("div");t.classList.add("cell-enemy"),t.setAttribute("id",`${e}-${n}-enemy`),g.appendChild(t)}}();const L=document.querySelectorAll(".cell-enemy");function S(e,n=!1){for(let t=0;t<10;t++)for(let r=0;r<10;r++)if(e.grid[t][r]&&!n){const e=document.getElementById(`${t}-${r}`);e.classList.add("ship"),e.draggable=!0}else e.grid[t][r]&&n&&document.getElementById(`${t}-${r}-enemy`).classList.add("ship-enemy")}function $(e,n){for(const t in n){let r=Math.floor(10*Math.random()),o=Math.floor(10*Math.random()),i=["vertical","horizontal"][Math.random()<.5?0:1];for(;!e.isValidPlacement(n[t],r,o,i);)r=Math.floor(10*Math.random()),o=Math.floor(10*Math.random()),i=["vertical","horizontal"][Math.random()<.5?0:1];e.placeShip(n[t],r,o,i)}}function q(e,n=!1){for(const t in e)e[t].isSunk()&&!n?document.querySelector(`.${t}-player`).querySelectorAll("div").forEach((e=>{e.classList.add("hit"),e.classList.add("ship")})):e[t].isSunk()&&n&&document.querySelector(`.${t.slice(0,-5)}-enemy`).querySelectorAll("div").forEach((e=>{e.classList.add("hit"),e.classList.add("ship")}))}function I(e){if(!x.attackedCells.includes(`${e.target.id[0]}-${e.target.id[2]}`)){if(function(e){e.target.classList.add("hit"),x.receiveAttack(e.target.id[0],e.target.id[2]),q(w,!0)}(e),x.checkVictory())return b.innerText="You win!",void L.forEach((e=>e.removeEventListener("click",I)));!function(){let e=Math.floor(10*Math.random()),n=Math.floor(10*Math.random());for(;y.attackedCells.includes(`${e}-${n}`);)e=Math.floor(10*Math.random()),n=Math.floor(10*Math.random());document.getElementById(`${e}-${n}`).classList.add("hit"),y.receiveAttack(e,n),q(B)}(),y.checkVictory()&&(b.innerText="You loose!",L.forEach((e=>e.removeEventListener("click",I))))}}$(y,B),S(y),$(x,w),S(x,!0),v.addEventListener("click",(()=>{b.innerText="Place your fleet!",document.querySelector("#tooltip").style.display="block",v.innerText="Random placement",document.querySelectorAll(".hit, .ship, .ship-enemy").forEach((e=>{e.classList.remove("ship"),e.classList.remove("hit"),e.classList.remove("ship-enemy")})),y=new m(10,10),x=new m(10,10),L.forEach((e=>e.removeEventListener("click",I))),k(),$(y,B),$(x,w),S(y),S(x,!0),M.addEventListener("dragstart",Y),M.addEventListener("dragover",D),M.addEventListener("dragenter",P),M.addEventListener("dragleave",V),M.addEventListener("drop",G),M.addEventListener("dragend",R)}));const M=document.querySelector("#gameboard-player");let T;const j={length:null};let z=[];function Y(e){if(e.target.classList.contains("ship")){const n=e.target.id[0],t=e.target.id[2];e.dataTransfer.effectAllowed="move";const r=new Image;r.src="",e.dataTransfer.setDragImage(r,0,0),e.dataTransfer.setData("application/json",JSON.stringify(y.grid[n][t])),j.length=y.grid[n][t].length,T=y.grid[n][t].orientation}else e.preventDefault()}function D(e){e.target.classList.contains("ship")||e.preventDefault()}function P(e){z=[];const n=parseInt(e.target.id[0],10),t=parseInt(e.target.id[2],10);try{if("vertical"===T)for(let e=0;e<j.length;e++)z.push(`${n+e}-${t}`);else for(let e=0;e<j.length;e++)z.push(`${n}-${t+e}`);if(y.isValidPlacement(j,n,t,T))for(const e of z){const n=document.getElementById(`${e[0]}-${e[2]}`);n.classList.remove("invalid-drop"),n.classList.remove("valid-drop"),n.classList.add("valid-drop")}else for(const e of z){const n=document.getElementById(`${e[0]}-${e[2]}`);n.classList.remove("invalid-drop"),n.classList.remove("valid-drop"),n.classList.add("invalid-drop")}}catch(e){console.log("Out of range: ",e)}}function V(){document.querySelectorAll(".cell").forEach((e=>{z.includes(e.id)||(e.classList.remove("invalid-drop"),e.classList.remove("valid-drop"))}))}function G(e){e.preventDefault(),e.dataTransfer.dropEffect="move";const n=JSON.parse(e.dataTransfer.getData("application/json")),t=new f(n.length,n.name),{orientation:r}=n,o=n.coordinates[0][0],i=n.coordinates[0][2],a=parseInt(e.target.id[0],10),s=parseInt(e.target.id[2],10);if(y.isValidPlacement(t,a,s,r)){for(const e of y.grid[o][i].coordinates)document.getElementById(`${e[0]}-${e[2]}`).classList.remove("ship");y.removeShip(y.grid[o][i]),y.placeShip(t,a,s,r),B[t.name].coordinates=y.grid[a][s].coordinates,B[t.name].hits=y.grid[a][s].hits}document.querySelectorAll(".invalid-drop, .valid-drop").forEach((e=>{e.classList.remove("invalid-drop"),e.classList.remove("valid-drop")}))}function R(){document.querySelectorAll(".invalid-drop, .valid-drop").forEach((e=>{e.classList.remove("invalid-drop"),e.classList.remove("valid-drop")})),S(y)}C.addEventListener("click",(()=>{b.innerText="Game has started!",v.innerText="New game",document.querySelector("#tooltip").style.display="none",L.forEach((e=>e.addEventListener("click",I))),M.removeEventListener("dragstart",Y),M.removeEventListener("dragover",D),M.addEventListener("dragenter",P),M.addEventListener("dragleave",V),M.removeEventListener("drop",G),M.removeEventListener("dragend",R)})),M.addEventListener("dragstart",Y),M.addEventListener("dragover",D),M.addEventListener("dragenter",P),M.addEventListener("dragleave",V),M.addEventListener("drop",G),M.addEventListener("dragend",R),M.addEventListener("dblclick",(e=>{if(e.target.classList.contains("ship")){const n=e.target.id[0],t=e.target.id[2];(function(e){if(function(e){if("horizontal"===e.orientation){const n=parseInt(e.coordinates[0][0],10),t=parseInt(e.coordinates[0][2],10);for(let r=1;r<e.length;r++)if(n+r>9||y.grid[n+r][t])return!1}else{const n=parseInt(e.coordinates[0][0],10),t=parseInt(e.coordinates[0][2],10);for(let r=1;r<e.length;r++)if(t+r>9||y.grid[n][t+r])return!1}return!0}(e)){const n=parseInt(e.coordinates[0][0],10),t=parseInt(e.coordinates[0][2],10);for(const e of y.grid[n][t].coordinates)document.getElementById(`${e[0]}-${e[2]}`).classList.remove("ship");y.removeShip(e),"horizontal"===e.orientation?y.placeShip(e,n,t,"vertical"):y.placeShip(e,n,t,"horizontal"),B[e.name].coordinates=y.grid[n][t].coordinates,B[e.name].hits=y.grid[n][t].hits}})(y.grid[n][t]),S(y)}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,